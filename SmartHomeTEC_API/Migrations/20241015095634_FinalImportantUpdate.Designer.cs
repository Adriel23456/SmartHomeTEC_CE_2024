// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SmartHomeTEC_API.Data;

#nullable disable

namespace SmartHomeTEC_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241015095634_FinalImportantUpdate")]
    partial class FinalImportantUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SmartHomeTEC_API.Models.Admin", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Email");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("SmartHomeTEC_API.Models.AssignedDevice", b =>
                {
                    b.Property<int>("AssignedID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AssignedID"));

                    b.Property<string>("ClientEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SerialNumberDevice")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("AssignedID");

                    b.HasIndex("ClientEmail");

                    b.HasIndex("SerialNumberDevice");

                    b.ToTable("AssignedDevice");
                });

            modelBuilder.Entity("SmartHomeTEC_API.Models.Bill", b =>
                {
                    b.Property<int>("BillNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BillNum"));

                    b.Property<string>("BillDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BillTime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DeviceTypeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OrderID")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("BillNum");

                    b.HasIndex("DeviceTypeName");

                    b.HasIndex("OrderID")
                        .IsUnique();

                    b.ToTable("Bill");
                });

            modelBuilder.Entity("SmartHomeTEC_API.Models.Certificate", b =>
                {
                    b.Property<string>("SerialNumberDevice")
                        .HasColumnType("text");

                    b.Property<int>("BillNum")
                        .HasColumnType("integer");

                    b.Property<string>("Brand")
                        .HasColumnType("text");

                    b.Property<string>("ClientEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ClientFullName")
                        .HasColumnType("text");

                    b.Property<string>("DeviceTypeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WarrantyEndDate")
                        .HasColumnType("text");

                    b.Property<string>("WarrantyStartDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("SerialNumberDevice");

                    b.HasIndex("BillNum")
                        .IsUnique();

                    b.HasIndex("ClientEmail");

                    b.HasIndex("DeviceTypeName");

                    b.ToTable("Certificate");
                });

            modelBuilder.Entity("SmartHomeTEC_API.Models.Chamber", b =>
                {
                    b.Property<int>("ChamberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ChamberID"));

                    b.Property<string>("ClientEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("ChamberID");

                    b.HasIndex("ClientEmail", "Name")
                        .IsUnique()
                        .HasDatabaseName("IX_Chamber_ClientEmail_Name");

                    b.ToTable("Chamber");
                });

            modelBuilder.Entity("SmartHomeTEC_API.Models.ChamberAssociation", b =>
                {
                    b.Property<int>("AssociationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AssociationID"));

                    b.Property<int>("AssignedID")
                        .HasColumnType("integer");

                    b.Property<string>("AssociationStartDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ChamberID")
                        .HasColumnType("integer");

                    b.Property<string>("WarrantyEndDate")
                        .HasColumnType("text");

                    b.HasKey("AssociationID");

                    b.HasIndex("AssignedID")
                        .IsUnique();

                    b.HasIndex("ChamberID");

                    b.ToTable("ChamberAssociation");
                });

            modelBuilder.Entity("SmartHomeTEC_API.Models.Client", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Continent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Email");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("SmartHomeTEC_API.Models.DeliveryAddress", b =>
                {
                    b.Property<int?>("AddressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("AddressID"));

                    b.Property<string>("ApartmentOrHouse")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Canton")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ClientEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("AddressID");

                    b.HasIndex("ClientEmail");

                    b.ToTable("DeliveryAddress");
                });

            modelBuilder.Entity("SmartHomeTEC_API.Models.Device", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("text");

                    b.Property<int?>("AmountAvailable")
                        .HasColumnType("integer");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DeviceTypeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double?>("ElectricalConsumption")
                        .HasColumnType("double precision");

                    b.Property<string>("LegalNum")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("SerialNumber");

                    b.HasIndex("DeviceTypeName");

                    b.HasIndex("LegalNum");

                    b.ToTable("Device");
                });

            modelBuilder.Entity("SmartHomeTEC_API.Models.DeviceType", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("WarrantyDays")
                        .HasColumnType("integer");

                    b.HasKey("Name");

                    b.ToTable("DeviceType");
                });

            modelBuilder.Entity("SmartHomeTEC_API.Models.Distributor", b =>
                {
                    b.Property<string>("LegalNum")
                        .HasColumnType("text");

                    b.Property<string>("Continent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LegalNum");

                    b.ToTable("Distributor");
                });

            modelBuilder.Entity("SmartHomeTEC_API.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OrderID"));

                    b.Property<string>("Brand")
                        .HasColumnType("text");

                    b.Property<string>("ClientEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DeviceTypeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("OrderClientNum")
                        .HasColumnType("integer");

                    b.Property<string>("OrderDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OrderTime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SerialNumberDevice")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("numeric");

                    b.HasKey("OrderID");

                    b.HasIndex("ClientEmail");

                    b.HasIndex("DeviceTypeName");

                    b.HasIndex("SerialNumberDevice")
                        .IsUnique();

                    b.ToTable("Order");
                });

            modelBuilder.Entity("SmartHomeTEC_API.Models.UsageLog", b =>
                {
                    b.Property<int?>("LogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("LogID"));

                    b.Property<int>("AssignedID")
                        .HasColumnType("integer");

                    b.Property<string>("ClientEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EndDate")
                        .HasColumnType("text");

                    b.Property<string>("EndTime")
                        .HasColumnType("text");

                    b.Property<string>("StartDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StartTime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TotalHours")
                        .HasColumnType("text");

                    b.HasKey("LogID");

                    b.HasIndex("AssignedID");

                    b.HasIndex("ClientEmail");

                    b.ToTable("UsageLog");
                });

            modelBuilder.Entity("SmartHomeTEC_API.Models.AssignedDevice", b =>
                {
                    b.HasOne("SmartHomeTEC_API.Models.Client", "Client")
                        .WithMany("AssignedDevices")
                        .HasForeignKey("ClientEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartHomeTEC_API.Models.Device", "Device")
                        .WithMany("AssignedDevices")
                        .HasForeignKey("SerialNumberDevice")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Device");
                });

            modelBuilder.Entity("SmartHomeTEC_API.Models.Bill", b =>
                {
                    b.HasOne("SmartHomeTEC_API.Models.DeviceType", "DeviceType")
                        .WithMany("Bills")
                        .HasForeignKey("DeviceTypeName")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SmartHomeTEC_API.Models.Order", "Order")
                        .WithOne("Bill")
                        .HasForeignKey("SmartHomeTEC_API.Models.Bill", "OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeviceType");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("SmartHomeTEC_API.Models.Certificate", b =>
                {
                    b.HasOne("SmartHomeTEC_API.Models.Bill", "Bill")
                        .WithOne("Certificate")
                        .HasForeignKey("SmartHomeTEC_API.Models.Certificate", "BillNum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartHomeTEC_API.Models.Client", "Client")
                        .WithMany("Certificates")
                        .HasForeignKey("ClientEmail")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SmartHomeTEC_API.Models.DeviceType", "DeviceType")
                        .WithMany("Certificates")
                        .HasForeignKey("DeviceTypeName")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SmartHomeTEC_API.Models.Device", "Device")
                        .WithOne("Certificate")
                        .HasForeignKey("SmartHomeTEC_API.Models.Certificate", "SerialNumberDevice")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Client");

                    b.Navigation("Device");

                    b.Navigation("DeviceType");
                });

            modelBuilder.Entity("SmartHomeTEC_API.Models.Chamber", b =>
                {
                    b.HasOne("SmartHomeTEC_API.Models.Client", "Client")
                        .WithMany("Chambers")
                        .HasForeignKey("ClientEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("SmartHomeTEC_API.Models.ChamberAssociation", b =>
                {
                    b.HasOne("SmartHomeTEC_API.Models.AssignedDevice", "AssignedDevice")
                        .WithOne("ChamberAssociation")
                        .HasForeignKey("SmartHomeTEC_API.Models.ChamberAssociation", "AssignedID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartHomeTEC_API.Models.Chamber", "Chamber")
                        .WithMany("ChamberAssociations")
                        .HasForeignKey("ChamberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedDevice");

                    b.Navigation("Chamber");
                });

            modelBuilder.Entity("SmartHomeTEC_API.Models.DeliveryAddress", b =>
                {
                    b.HasOne("SmartHomeTEC_API.Models.Client", "Client")
                        .WithMany("DeliveryAddresses")
                        .HasForeignKey("ClientEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("SmartHomeTEC_API.Models.Device", b =>
                {
                    b.HasOne("SmartHomeTEC_API.Models.DeviceType", "DeviceType")
                        .WithMany("Devices")
                        .HasForeignKey("DeviceTypeName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartHomeTEC_API.Models.Distributor", "Distributor")
                        .WithMany("Devices")
                        .HasForeignKey("LegalNum")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("DeviceType");

                    b.Navigation("Distributor");
                });

            modelBuilder.Entity("SmartHomeTEC_API.Models.Order", b =>
                {
                    b.HasOne("SmartHomeTEC_API.Models.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientEmail")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SmartHomeTEC_API.Models.DeviceType", "DeviceType")
                        .WithMany("Orders")
                        .HasForeignKey("DeviceTypeName")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SmartHomeTEC_API.Models.Device", "Device")
                        .WithOne("Order")
                        .HasForeignKey("SmartHomeTEC_API.Models.Order", "SerialNumberDevice")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Device");

                    b.Navigation("DeviceType");
                });

            modelBuilder.Entity("SmartHomeTEC_API.Models.UsageLog", b =>
                {
                    b.HasOne("SmartHomeTEC_API.Models.AssignedDevice", "AssignedDevice")
                        .WithMany("UsageLogs")
                        .HasForeignKey("AssignedID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartHomeTEC_API.Models.Client", "Client")
                        .WithMany("UsageLogs")
                        .HasForeignKey("ClientEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedDevice");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("SmartHomeTEC_API.Models.AssignedDevice", b =>
                {
                    b.Navigation("ChamberAssociation");

                    b.Navigation("UsageLogs");
                });

            modelBuilder.Entity("SmartHomeTEC_API.Models.Bill", b =>
                {
                    b.Navigation("Certificate");
                });

            modelBuilder.Entity("SmartHomeTEC_API.Models.Chamber", b =>
                {
                    b.Navigation("ChamberAssociations");
                });

            modelBuilder.Entity("SmartHomeTEC_API.Models.Client", b =>
                {
                    b.Navigation("AssignedDevices");

                    b.Navigation("Certificates");

                    b.Navigation("Chambers");

                    b.Navigation("DeliveryAddresses");

                    b.Navigation("Orders");

                    b.Navigation("UsageLogs");
                });

            modelBuilder.Entity("SmartHomeTEC_API.Models.Device", b =>
                {
                    b.Navigation("AssignedDevices");

                    b.Navigation("Certificate");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("SmartHomeTEC_API.Models.DeviceType", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Certificates");

                    b.Navigation("Devices");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("SmartHomeTEC_API.Models.Distributor", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("SmartHomeTEC_API.Models.Order", b =>
                {
                    b.Navigation("Bill");
                });
#pragma warning restore 612, 618
        }
    }
}
